# ------------------------------------------------------------------------------

# Preferences:
#   These are the default values for all hosts. To apply different preferences between hosts use host preferences files (`host_vars` directory).

timezone: "America/Los_Angeles"
#   (password authentication is disabled by default for the root user. You can opt to disable password authentication for all other users as well)
ssh_disable_password_authentication: false

# command line only since this will be installed on servers as well
common_all:
    - bat                 # Cat clone with syntax highlighting and git integration (`cat` alternative)
    - btop                # A graphical process/system monitor (`htop` alternative)
    - curl                # Network utility to retrieve files from the Web
    - gcc                 # GCC compiler
    - gh                  # GitHub CLI
    - git                 # Git
    - vim                 # Easily usable by anyone
    - wget                # Network utility to retrieve files from the Web (used by Neovim to download files on the internet when pressing `gf`)
    - zsh                 # Zsh
    # TODO: These are the only ones in question from rolling into common_all_with_nix. Only consideration is arch
    - p7zip               # Command-line file archiver with high compression ratio
    - unzip               # For extracting and viewing files in .zip archives
    - zip                 # Compressor/archiver for creating and modifying zipfiles

common_all_with_nix: # Used for systems with dotfiles-nix to manage rest of packages. These are used for system utilities only
#TODO: Consider rolling to/from common_all after confirming dotfiles-nix WILL ALWAYS be used alongside this repo
    - bat                 # Cat clone with syntax highlighting and git integration (`cat` alternative)
    - btop                # A graphical process/system monitor (`htop` alternative)
    - curl                # Network utility to retrieve files from the Web
    - gcc                 # GCC compiler
    - gh                  # GitHub CLI
    - git                 # Git
    - vim                 # Easily usable by anyone
    - wget                # Network utility to retrieve files from the Web (used by Neovim to download files on the internet when pressing `gf`)
    - zsh                 # Zsh

common_linux:
    #- hwinfo              # Hardware detection tool from openSUSE
    - unrar               # The RAR uncompression program
    #- ethtool             # Utility for controlling network drivers and hardware
    #- traceroute          # Tracks the route taken by packets over an IP network

arch_pkgs:
    - vi                  # Called by ansible-vault and maybe others
    - eza                 # Modern replacement for ls, community fork of exa (`ls` alternative)
    - fd                  # Simple, fast and user-friendly alternative to find (`find` alternative)
    - pipewire-alsa       # Low-latency audio/video router and processor - ALSA configuration
    #- pipewire-jack       # Low-latency audio/video router and processor - JACK replacement
    - pipewire-pulse      # Low-latency audio/video router and processor - PulseAudio replacement
    - pavucontrol         # PulseAudio Volume Control
    - audacious           # Audio player
    - bandwhich           # Terminal bandwidth utilization tool
    - github-cli          # GitHub CLI
    - pyenv               # Easy python environment switcher
    - mpv           # A free, open source, and cross-platform media player
    - mpv-mpris     # MPRIS plugin for mpv (media keys)
    - libreoffice-fresh   # LibreOffice branch which contains new features and program enhancements
    - foliate             # A simple and modern GTK eBook reader
    - discord
    - chromium
    - calibre
    - obsidian
    - steam
    - firefox
    - evince              # Document viewer (PDF, PostScript, XPS, djvu, dvi, tiff, cbr, cbz, cb7, cbt)
    - fontconfig          # library for configuring and customizing font access
      # A smarter cd command for your terminal (`cd` alternative)

arch_aur_pkgs:
    - ferdium-bin
    - github-desktop-bin
    - nomachine
    - protonup-qt
    - spotify
    - stretchly
    - typora          # unar and lsar: Objective-C tools for uncompressing archive files 
    - visual-studio-code-bin
    - wezterm-git
    - zoom

fedora_add:
    - snapper
    - python-dnf-plugin-snapper
    #- https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
    #- https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
    - discord
    #- gstreamer1-plugins-{bad-\*,good-\*,base}
    - gstreamer1-plugin-openh264
    #- gstreamer1-libav #--exclude=gstreamer1-plugins-bad-free-devel
    #- lame\* --exclude=lame-devel
    #- dnf-automatic

fedora_remove:
    - kfind
    - khelpcenter
    - kmousetool
    - kaddressbook
    - korganizer
    - akregator
    - kcharselect
    - dragon
    - elisa
    - kmahjongg
    - kmines
    - kolourpaint
    - kpatience
    - kpat
    - ktnef
    - sieveeditor

install_homebrew_if_missing: true

# Calculated variables (no need to touch):
#   (lookup env will get the given environment variable from the controller machine. This is why we must execute this script via `ansible-pull` and while logged in as the user for which we want to generate the config files. For more info see: https://docs.ansible.com/ansible/latest/collections/ansible/builtin/env_lookup.html#ansible-collections-ansible-builtin-env-lookup)
home: "{{ lookup('env', 'HOME') }}"
user: "{{ lookup('env', 'USER') }}"
#   (required for processor firmware updates)
is_intel: "{{ 'GenuineIntel' in ansible_processor }}"
